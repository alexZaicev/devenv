version: "3.5"
services:
  go-dev:
    build: services/go-dev
    environment:
      - "ROOT_ASKPASS=${ROOT_ASKPASS}"
      - "ROOT_GIT_TOKEN=${ROOT_GIT_TOKEN}"
      - "ROOT_GIT_EMAIL=${ROOT_GIT_EMAIL}"
      - "ROOT_GIT_USER=${ROOT_GIT_USER}"
    hostname: go-dev
    volumes:
      - ./repo:/home/dev/repo
      - ./scripts:/home/dev/scripts
      - go-dev-data:/usr/local/lib/go-dev
    privileged: true
    ports:
      - "22"
      - "8080"
    healthcheck:
      test: ["CMD", "bash", "-c", "echo hello"]
      interval: 30s
      timeout: 5s
      retries: 3
  pg-dev:
    build:
        context: services/postgres
        dockerfile: Dockerfile
    hostname: pg-dev
    ports:
      - "5432"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=${POSTGRES_USER-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD-mysecret}
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - pg-dev-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "postgres-healthcheck"]
      interval: 10s
      timeout: 10s
      retries: 5
  redis-dev:
    build:
        context: services/redis
        dockerfile: Dockerfile
    hostname: redis-dev
    command: "redis-server --appendonly yes"
    ports:
      - "6379"
    volumes:
      - redis-dev-data:/data
    healthcheck:
      test: ["CMD", "redis-healthcheck"]
      interval: 10s
      timeout: 10s
      retries: 5
  mongo-dev:
    build:
        context: services/mongo
        dockerfile: Dockerfile
    hostname: mongo-dev
    ports:
      - "27017-27019"
    volumes:
      - mongo-dev-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD-example}
    healthcheck:
      test: ["CMD", "mongo-healthcheck"]
      interval: 10s
      timeout: 10s
      retries: 5
volumes:
  go-dev-data: {}
  pg-dev-data: {}
  redis-dev-data: {}
  mongo-dev-data: {}
  